<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fade="clr-namespace:VsrFade.Controls;assembly=VsrFade"
                    xmlns:toastCore="clr-namespace:ToastManager.Core;assembly=ToastManager"
                    xmlns:toastConverter="clr-namespace:ToastManager.Core.Converter;assembly=ToastManager"
                    xmlns:toast="clr-namespace:ToastManager;assembly=ToastManager">

    <Style TargetType="{x:Type Grid}" x:Key="CardAnimation">
        <Style.Triggers>
            <EventTrigger RoutedEvent="Loaded">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                        Storyboard.TargetProperty="(Grid.RenderTransform).(ScaleTransform.ScaleX)"
                                        From="0" To="1" Duration="0:0:0.25">
                                <DoubleAnimation.EasingFunction>
                                    <CircleEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation
                                        Storyboard.TargetProperty="(Grid.RenderTransform).(ScaleTransform.ScaleY)"
                                        From="0" To="1" Duration="0:0:0.25">
                                <DoubleAnimation.EasingFunction>
                                    <CircleEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>

            <EventTrigger RoutedEvent="Unloaded">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                        Storyboard.TargetProperty="(Grid.RenderTransform).(ScaleTransform.ScaleX)"
                                        To="0" Duration="0:0:0"/>
                            <DoubleAnimation
                                        Storyboard.TargetProperty="(Grid.RenderTransform).(ScaleTransform.ScaleY)"
                                        To="0" Duration="0:0:0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Grid}" x:Key="ToastAnimation">
        <Style.Triggers>
            <EventTrigger RoutedEvent="Loaded">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                        Storyboard.TargetProperty="(Grid.RenderTransform).(ScaleTransform.ScaleX)"
                                        From="0" To="1" Duration="0:0:0.25">
                                <DoubleAnimation.EasingFunction>
                                    <BackEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation
                                        Storyboard.TargetProperty="(Grid.RenderTransform).(ScaleTransform.ScaleY)"
                                        From="0" To="1" Duration="0:0:0.25">
                                <DoubleAnimation.EasingFunction>
                                    <BackEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>

            <EventTrigger RoutedEvent="Unloaded">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                        Storyboard.TargetProperty="(Grid.RenderTransform).(ScaleTransform.ScaleX)"
                                        To="0" Duration="0:0:0"/>
                            <DoubleAnimation
                                        Storyboard.TargetProperty="(Grid.RenderTransform).(ScaleTransform.ScaleY)"
                                        To="0" Duration="0:0:0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="toast:ToastDialog">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Grid.Resources>
                            <toastConverter:EnumToBoolConverter x:Key="EnumToBoolConverter"/>
                            <toastConverter:EnumFlagConverter x:Key="EnumFlagConverter"/>

                            <Style TargetType="fade:FadeButton">
                                <Setter Property="Margin" Value="5" />
                                <Setter Property="CornerRadius" Value="5" />
                                <Setter Property="Height" Value="30" />
                                <Setter Property="Width" Value="100" />
                                <Setter Property="Background" Value="{DynamicResource ButtonBackground}"/>
                            </Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Foreground" Value="{DynamicResource ButtonForeground}" />
                            </Style>

                            <Geometry x:Key="CheckCircle">m424-296 282-282-56-56-226 226-114-114-56 56 170 170Zm56 216q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-80q134 0 227-93t93-227q0-134-93-227t-227-93q-134 0-227 93t-93 227q0 134 93 227t227 93Zm0-320Z</Geometry>
                            <Geometry x:Key="Error">M480-280q17 0 28.5-11.5T520-320q0-17-11.5-28.5T480-360q-17 0-28.5 11.5T440-320q0 17 11.5 28.5T480-280Zm-40-160h80v-240h-80v240Zm40 360q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-80q134 0 227-93t93-227q0-134-93-227t-227-93q-134 0-227 93t-93 227q0 134 93 227t227 93Zm0-320Z</Geometry>
                            <Geometry x:Key="Info">M440-280h80v-240h-80v240Zm40-320q17 0 28.5-11.5T520-640q0-17-11.5-28.5T480-680q-17 0-28.5 11.5T440-640q0 17 11.5 28.5T480-600Zm0 520q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-80q134 0 227-93t93-227q0-134-93-227t-227-93q-134 0-227 93t-93 227q0 134 93 227t227 93Zm0-320Z</Geometry>
                            <Geometry x:Key="Warning">m40-120 440-760 440 760H40Zm138-80h604L480-720 178-200Zm302-40q17 0 28.5-11.5T520-280q0-17-11.5-28.5T480-320q-17 0-28.5 11.5T440-280q0 17 11.5 28.5T480-240Zm-40-120h80v-200h-80v200Zm40-100Z</Geometry>

                        </Grid.Resources>
                        
                        <Border x:Name="FrontEndBlocker" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                          
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="Background" Value="#01010101"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsDarkBackground}" Value="true">
                                            <Setter Property="Background" Value="#6000"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>

                            <Border.Triggers>
                                <EventTrigger RoutedEvent="Mouse.MouseDown">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                                        Storyboard.TargetName="ToastPopup"
                                                        Storyboard.TargetProperty="(Grid.RenderTransform).(ScaleTransform.ScaleX)"
                                                        From="1" To="1.2" Duration="0:0:0.25" AutoReverse="True">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CircleEase EasingMode="EaseOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation
                                                        Storyboard.TargetName="ToastPopup"
                                                        Storyboard.TargetProperty="(Grid.RenderTransform).(ScaleTransform.ScaleY)"
                                                        From="1" To="1.2" Duration="0:0:0.25" AutoReverse="True">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CircleEase EasingMode="EaseOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                            </Border.Triggers>
                        </Border>


                        <Grid x:Name="ToastPopup" Style="{StaticResource CardAnimation}" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Grid.RenderTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                            </Grid.RenderTransform>

                            <fade:FastShadow CornerRadius="5" BlurRadius="50"/>

                            <Border x:Name="ToastBorder" Background="{DynamicResource TopBarBackground}" CornerRadius="5" MaxWidth="500" MaxHeight="500">

                                <DockPanel LastChildFill="True">

                                    <DockPanel DockPanel.Dock="Top" LastChildFill="True" Margin="3">

                                        <fade:FadeButton DockPanel.Dock="Right" Width="35" Height="35" Margin="5,0,0,0" Background="{DynamicResource TopBarBackground2}" FocusedBackground="red" Command="{Binding ExitButtonCommand}">
                                            <Path Data="{StaticResource Close}" Margin="6" Opacity="0.6" />
                                        </fade:FadeButton>

                                        <Border DockPanel.Dock="Left" Background="#5000" CornerRadius="5" Margin="0">

                                            <StackPanel Orientation="Horizontal">
                                                <!--Info-->
                                                <Border>
                                                    <Border.Style>
                                                        <Style TargetType="Border">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding ToastType, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static toastCore:ToastType.Info}}" Value="false">
                                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Border.Style>

                                                    <Path Data="{StaticResource Info}" Fill="#FF59697A" Margin="5" />
                                                </Border>

                                                <!--Warning-->
                                                <Border>
                                                    <Border.Style>
                                                        <Style TargetType="Border">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding ToastType, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static toastCore:ToastType.Warning}}" Value="false">
                                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Border.Style>

                                                    <Path Data="{StaticResource Warning}" Fill="#FF59697A"  Margin="5" />
                                                </Border>

                                                <!--Error-->
                                                <Border>
                                                    <Border.Style>
                                                        <Style TargetType="Border">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding ToastType, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static toastCore:ToastType.Error}}" Value="false">
                                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Border.Style>

                                                    <Path Data="{StaticResource Error}" Fill="Red" Margin="5" />
                                                </Border>

                                                <!--Success-->
                                                <Border>
                                                    <Border.Style>
                                                        <Style TargetType="Border">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding ToastType, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static toastCore:ToastType.Success}}" Value="false">
                                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Border.Style>

                                                    <Path Data="{StaticResource CheckCircle}" Fill="LightGreen" Margin="5" />
                                                </Border>

                                                <TextBlock Text="{Binding Title}" Opacity="0.6" FontSize="20" FontWeight="Medium" VerticalAlignment="Center" Margin="10,3" />
                                            </StackPanel>


                                        </Border>
                                    </DockPanel>


                                    <!--BUTTON-->
                                    <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" HorizontalAlignment="Right">
                                        <!--Ok-->
                                        <Border>
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ToastButton, Converter={StaticResource EnumFlagConverter}, ConverterParameter={x:Static toastCore:ToastButton.Ok}}" Value="false">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>


                                            <fade:FadeButton Command="{Binding OkButtonCommand}">
                                                <TextBlock Text="Ok" FontSize="15" FontWeight="Medium" />
                                            </fade:FadeButton>
                                        </Border>

                                        <!--YES-->
                                        <Border>
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ToastButton, Converter={StaticResource EnumFlagConverter}, ConverterParameter={x:Static toastCore:ToastButton.Yes}}" Value="false">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>


                                            <fade:FadeButton Command="{Binding YesButtonCommand}">
                                                <TextBlock Text="Yes" FontSize="15" FontWeight="Medium" />
                                            </fade:FadeButton>
                                        </Border>

                                        <!--NO-->
                                        <Border>
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ToastButton, Converter={StaticResource EnumFlagConverter}, ConverterParameter={x:Static toastCore:ToastButton.No}}" Value="false">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>

                                            <fade:FadeButton Command="{Binding NoButtonCommand}">
                                                <TextBlock Text="No" FontSize="15" FontWeight="Medium" />
                                            </fade:FadeButton>
                                        </Border>

                                        <!--Cancel-->
                                        <Border>
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ToastButton, Converter={StaticResource EnumFlagConverter}, ConverterParameter={x:Static toastCore:ToastButton.Cancel}}" Value="false">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>

                                            <fade:FadeButton Command="{Binding CancelButtonCommand}">
                                                <TextBlock Text="Cancel" FontSize="15" FontWeight="Medium" />
                                            </fade:FadeButton>
                                        </Border>
                                    </StackPanel>


                                    <Border DockPanel.Dock="Top" Margin="5">
                                        <TextBlock Text="{Binding Message}" TextWrapping="WrapWithOverflow" FontSize="15" FontWeight="Medium" VerticalAlignment="Center" Margin="5" />
                                    </Border>
                                </DockPanel>

                            </Border>

                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>